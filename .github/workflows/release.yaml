# taken from https://github.com/cargo-generate/cargo-generate/blob/master/.github/workflows/release.yml and modified

## references:
# cache: https://github.com/actions/cache/blob/main/examples.md#rust---cargo
# audit: https://github.com/actions-rs/audit-check
# "needs": https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idneeds

name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]-alpha.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]-beta.[0-9]+'
    paths-ignore:
      - "**/docs/**"
      - "**.md"

jobs:
  check:
    name: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo check

  lint:
    name: lint
    needs: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
        cargo-cmd:
          - fmt --all -- --check
          - clippy --all-targets --all-features -- -D warnings
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo ${{ matrix['cargo-cmd'] }}

  release:
    name: post / github release
    needs: lint
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the "Get Changelog Entry" step above, referencing its ID to get its outputs object.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tag_name.outputs.current_version }}
